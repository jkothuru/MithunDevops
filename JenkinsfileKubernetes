node{
     
    stage('SCM Checkout'){
	git 'https://github.com/jkothuru/MithunDevops.git'    }
    
    stage(" Maven Clean Package"){
      def mavenHome =  tool name: "Maven-3.6.1", type: "maven"
      def mavenCMD = "${mavenHome}/bin/mvn"
      sh "${mavenCMD} clean package"
      
    } 
    
    
    stage('Build Docker and Push Image in AWS'){
       // sh 'docker build -t dockerhandson/spring-boot-mongo .'
       aws ecr get-login --no-include-email | bash
       docker build -t first .
       docker tag first:latest 086276496519.dkr.ecr.us-west-2.amazonaws.com/first:latest
       docker push 086276496519.dkr.ecr.us-west-2.amazonaws.com/first:latest
    }
    /**
    stage('push'){
    docker.withRegistry('https://086276496519.dkr.ecr.us-west-2.amazonaws.com','ecr:us-west-2:rwen-workpc-aws'){
    	docker.image("first.latest").push()
	}
	echo "pushed to ecr"
	
    stage('Push Docker Image'){
        withCredentials([string(credentialsId: 'DOKCER_HUB_PASSWORD', variable: 'DOKCER_HUB_PASSWORD')]) {
          sh "docker login -u dockerhandson -p ${DOKCER_HUB_PASSWORD}"
        }
        sh 'docker push dockerhandson/spring-boot-mongo'
     }
     
     stage("Deploy To Kuberates Cluster"){
       kubernetesDeploy(
         configs: 'springBootMongo.yml', 
         kubeconfigId: 'KUBERNATES_CONFIG',
         enableConfigSubstitution: true
        )
     }
	 
	  
      stage("Deploy To Kuberates Cluster"){
        sh 'kubectl apply -f pringBootMongo.yml'
      } **/
     
}


